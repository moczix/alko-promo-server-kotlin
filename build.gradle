buildscript {
	ext {
		kotlinVersion = '1.2.41'
		jacksonVersion = '2.9.5'
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath ("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

noArg {
	annotation("com.moczix.NoArgAnnotation")
}

group = 'com.moczix.alkohunters'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'mysql:mysql-connector-java'
	compile("org.springframework.boot:spring-boot-devtools")
	compile("org.springframework.boot:spring-boot-starter-security")
	compile 'com.google.apis:google-api-services-oauth2:v1-rev141-1.23.0'

	compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
	compile("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
	compile("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
	compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"


	compile "org.imgscalr:imgscalr-lib:4.2"

	testCompile('org.springframework.boot:spring-boot-starter-test')


}
